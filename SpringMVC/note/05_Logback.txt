05_Logback

# Logback
	- 스프링 부트에 기본적으로 내장되어 있는 로깅 라이브러리
	- System.out.println()으로 로그를 남기는것보다 훨씬 체계적인 방식으로 로그를 남길 수 있다
	- 서버는 동시에 많은 사람들이 접속하게 되는 멀티 쓰레드 프로그램이기 때문에 syso을 사용해
		로그를 남기게 되면 많은 성능 저하가 발생한다
	- Logback은 로그에 등급을 설정하고 원하는 등급 이상의 로그만 보게끔 설정하거나
		특정 클래스에서 발생하는 로그만 보게끔 설정하는 등 다양한 설정을 제공한다
		
# Logger
	- 해당 클래스에서 발생하는 로그를 수집해주는 객체
	- 수집한 로그들을 Appender로 보낸다
# Appender
	- Logger가 수집해 보내준 로그들을 원하는 곳에 출력해주는 객체
	-  FileAppender, ConsoleAppeneder등 어느곳에 어떤 방식으로지 다양하게 출력가능
# Encoder
	- Appender를 통해 로그를 출력 할 때 어떤 모양으로 출력할지 설정해두는 객체
	

# Logback에서 사용하는 등급
	- OFF
		- FATAL
		- ERROR : 에러 등급의 로그를 작성할 때 사용
		- WARN : 경고
		- INFO : 정보
		- DEBUG : 버그를 찾기 위해 사용
		- TRACE : 코드 진행 흐름을 추적하기 위해 사용하는 아주 정밀한 로그를 작성할 때 사용
	- ALL
	
# application.properties에서 로그 옵션 설정하기
	- logging.threshold.console : 콘솔 Appender의 로그 출력 등급을 설정한다
	- logging.threshold.file : 파일 Appender의 로그 출력 등급을 설정한다
	- logging.file.name : 파일에 로그를 출력하기 위한 경로를 설정한다	
	

# src/main/resources/logback-spring.xml
	- 해당 파일에서 로그의 기본 설정을 원하는대로 덮어씌워서 사용할 수 있다
		ex> 다른 새로운 Appender 추가하기 등
		
# 기본적인 사용법
	- 원하는 클래스에 다음과 같이 Logger를 초가하여 사용한다
		private final static Logger log = LoggerFactory.getLogger(LombokTestController.class);
	- Lombok에서 해당 클래스에 Logger를 자동으로 생성해주는 어노테이션을 제공
